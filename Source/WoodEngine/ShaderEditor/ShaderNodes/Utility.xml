<ShaderEditor>

  <NodeDefinition name="Time" category ="Utility" canBeVertex="true" canBeFrag="false">

    <Output name="Time">
      <dataType type="float" size="1" />
      <Uniform name="time" />
    </Output>

  </NodeDefinition>

  <NodeDefinition name="Plus_One_div_2" category ="Utility" canBeVertex="true" canBeFrag="false">


    <Input name="Value">
      <dataType type="float" size="1" />
     </Input>
    <Output name="newValue">
      <dataType type="float" size="1" />
      <Shader_Code> ( $Value + 1 ) * .5</Shader_Code>
    </Output>

  </NodeDefinition>

  <NodeDefinition name="Twist" category ="Utility" canBeVertex="false" canBeFrag="true">
    <Function>
      vec4 Twist( vec4 Position, float twistAmount )
      {

      float ySquared = twistAmount * Position.y  * Position.y * .00314159;
      float cosA = cos(ySquared);
      float sinA = sin(ySquared);

      float newX = Position.x * cosA + ( Position.z * -sinA );
      float newZ = Position.x * sinA + ( Position.z * cosA );

      return vec4(newX, Position.y, newZ, 1.0);
      }
    </Function>
    
    <Input name="World_Position">
      <dataType type="float" minSize="1" maxSize="4" size="4"/>
    </Input>
    <Input name="TwistAmount">
      <dataType type="float" size="1"/>
    </Input>
    <Output name="Twisted_Position">
      <dataType type="float" size="4"/>
      <Shader_Code>Twist( $World_Position , $TwistAmount )</Shader_Code>
    </Output>
  </NodeDefinition>

  <NodeDefinition name="Max1" category ="Utility" canBeVertex="true" canBeFrag="true">
    <Input name="A">
      <dataType type="float" size="1" />
    </Input>
    <Input name="B">
      <dataType type="float" size="1" />
    </Input>
    <Output name="Max">
      <dataType type="float" size="1" />
      <Shader_Code> max( $A , $B )</Shader_Code>
    </Output>

  </NodeDefinition>
  


</ShaderEditor>