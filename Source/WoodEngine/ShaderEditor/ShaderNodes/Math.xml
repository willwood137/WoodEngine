<ShaderEditor>
  <NodeDefinition name="Division" category ="Math" canBeVertex="true" canBeFrag="true">
    
    <Function returnType ="Vector" returnSize ="4">
vec4 Division( vec4 numerator, vec4 denominator )
{
  return vec4(numerator / denominator);
}
    </Function>

    <Input name="Numerator">
      <dataType type="vector" minSize="1" maxSize="4"/>
    </Input>
    <Input name="Denominator">
      <dataType type="vector" minSize="1" maxSize="4"/>
    </Input>
    <Output name="Result">
      <dataType  type ="vector" size ="4"/>
      <Shader_Code>Division( $Numerator , $Denominator )</Shader_Code>
    </Output>
    
  </NodeDefinition>
  
  <NodeDefinition name="Sum" category="Math" canBeVertex="true" canBeFrag="true">
    <Input name="A">
      <dataType type="vector" minSize="1" maxSize="4"/>
    </Input>
    <Input name="B">
      <dataType type="vector" minSize="1" maxSize="4"/>
    </Input>
    <Output name="Sum">
      <dataType type="vector" smartSize="$A"/>
      <Shader_Code>$A + $B</Shader_Code>
    </Output>
  </NodeDefinition>

  <NodeDefinition name="Multiply" category="Math" canBeVertex="true" canBeFrag="true">
    <Input name="A">
      <dataType type="vector" minSize="1" maxSize="4"/>
    </Input>
    <Input name="B">
      <dataType type="vector" minSize="1" maxSize="4"/>
    </Input>
    <Output name="Sum">
      <dataType type="vector" smartSize="$A"/>
      <Shader_Code>$A * $B</Shader_Code>
    </Output>
  </NodeDefinition>

  <NodeDefinition name="Cosine" category="Math" canBeVertex="true" canBeFrag="true">
    <Input name="In">
      <dataType type="float" size="1"/>
    </Input>
    <Output name="Out">
      <dataType type="float" size="1"/>
      <Shader_Code>cos( $In )</Shader_Code>
    </Output>
  </NodeDefinition>

  <NodeDefinition name="Transform_Vector" category="Math" canBeVertex="true" canBeFrag="true">
    <Input name="Vector">
      <dataType type="vector" minSize="4" maxSize="4"/>
    </Input>
    <Input name="Matrix">
      <dataType type="matrix" minSize ="4" maxSize="4"/>
    </Input>
    <Output name="OutVector">
      <dataType type="vector" smartSize="$Vector"/>
      <Shader_Code>$Matrix * $Vector</Shader_Code>
    </Output>
  </NodeDefinition>
  
  <NodeDefinition name="3DVectorField" category="Math" canBeVertex="true" canBeFrag="true">

    <Function returnType ="Vector" returnSize ="3">
      vec4 VectorField( vec3 position, float seed )
      {
      return vec3( cos(position.x) * 2.0 - 1.0, sin(position.y)*2.0 - 1.0, sin(position.z) * 2.0 - 1.0); 
      }
    </Function>
    <Input name="Position">
      <dataType type="vector" size="3"/>
    </Input>
    <Input name="Seed">
      <dataType type="float" size="1"/>
    </Input>
    <Output name="OutVector">
      <dataType type="vector" smartSize="$Vector"/>
      <Shader_Code>VectorField( $Position , $Seed )</Shader_Code>
    </Output>
  </NodeDefinition>
  
  
</ShaderEditor>