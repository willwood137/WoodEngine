<ShaderEditor>
  <NodeDefinition name="Division" category ="Math" canBeVertex="true" canBeFrag="true">
    <Input name="Numerator">
      <dataType type="float" minSize="1" maxSize="4"/>
    </Input>
    <Input name="Denominator">
      <dataType type="float" minSize="1" maxSize="4"/>
    </Input>
    <Output name="Quotient">
      <dataType  type ="float" defaultSize ="1"/>
      <Shader_Code>Division( $Numerator , $Denominator )</Shader_Code>
    </Output>
    <LinkSlotData master="Numerator">
      <EqualSizeSlave slot="Denominator"/>
      <EqualSizeSlave slot="Quotient"/>
    </LinkSlotData>
  </NodeDefinition>
  
  <NodeDefinition name="Sum" category="Math" canBeVertex="true" canBeFrag="true">
    <Input name="Addend_A">
      <dataType type="float" minSize="1" maxSize="4"/>
    </Input>
    <Input name="Addend_B">
      <dataType type="float" minSize="1" maxSize="4"/>
    </Input>
    <Output name="Sum">
      <dataType type="float" defaultSize="1"/>
      <Shader_Code>$Addend_A + $Addend_B</Shader_Code>
    </Output>
    <LinkSlotData master="Addend_A">
      <EqualSizeSlave slot="Addend_B"/>
      <EqualSizeSlave slot="Sum"/>
    </LinkSlotData>
  </NodeDefinition>

  <NodeDefinition name="Multiply" category="Math" canBeVertex="true" canBeFrag="true">
    <Input name="A">
      <dataType type="float" minSize="1" maxSize="4"/>
    </Input>
    <Input name="B">
      <dataType type="float" minSize="1" maxSize="4"/>
    </Input>
    <Output name="Product">
      <dataType type="float" smartSize="$A"/>
      <Shader_Code>$A * $B</Shader_Code>
    </Output>
  </NodeDefinition>

  <NodeDefinition name="Cosine" category="Math" canBeVertex="true" canBeFrag="true">
    <Input name="In">
      <dataType type="float" size="1"/>
    </Input>
    <Output name="Out">
      <dataType type="float" size="1"/>
      <Shader_Code>cos( $In )</Shader_Code>
    </Output>
  </NodeDefinition>

  <NodeDefinition name="Transform_float" category="Math" canBeVertex="true" canBeFrag="true">
    <Input name="float">
      <dataType type="float" minSize="4" maxSize="4"/>
    </Input>
    <Input name="Matrix">
      <dataType type="matrix" minSize ="4" maxSize="4"/>
    </Input>
    <Output name="Outfloat">
      <dataType type="float" smartSize="$float"/>
      <Shader_Code>$Matrix * $float</Shader_Code>
    </Output>
  </NodeDefinition>
  
  <NodeDefinition name="3DfloatField" category="Math" canBeVertex="true" canBeFrag="true">

    <Function returnType ="float" returnSize ="3">
      vec4 floatField( vec3 position, float seed )
      {
      return vec3( cos(position.x) * 2.0 - 1.0, sin(position.y)*2.0 - 1.0, sin(position.z) * 2.0 - 1.0); 
      }
    </Function>
    <Input name="Position">
      <dataType type="float" size="3"/>
    </Input>
    <Input name="Seed">
      <dataType type="float" size="1"/>
    </Input>
    <Output name="Outfloat">
      <dataType type="float" smartSize="$float"/>
      <Shader_Code>floatField( $Position , $Seed )</Shader_Code>
    </Output>
  </NodeDefinition>

  <NodeDefinition name="Interpolate" category="Math" canBeVertex="true" canBeFrag="true">
    <Input name="A">
      <dataType type="float" minSize="1" maxSize="4"/>
    </Input>
    <Input name="B">
      <dataType type="float" minSize="1" maxSize="4"/>
    </Input>
    <Input name="Interpolation">
      <dataType type="float" size="1"/>
    </Input>
    <Output name="Outfloat">
      <dataType type="float" size="4"/>
      <Shader_Code>mix( $A , $B , $Interpolation )</Shader_Code>
    </Output>
  </NodeDefinition>
</ShaderEditor>